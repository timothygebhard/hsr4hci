name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
      fail-fast: false

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Upgrade pip and setuptools
      run: |
        python -m pip install --upgrade pip setuptools
    - name: Install package in development mode
      run: |
        pip install -e .[develop]
    - name: Run flake8
      run: |
        flake8 . --count --show-source --statistics --exclude experiments,scripts
    - name: Run mypy (package)
      run: |
        mypy -p hsr4hci
    - name: Run mypy (tests)
      run: |
        mypy tests/
    - name: Run pytest
      run: |
        exec 5>&1 ;
        SUMMARY="$(pytest --cov-report term-missing --cov=hsr4hci --verbose | tee >(cat - >&5))" ;
        COVERAGE=$(echo "$SUMMARY" | tail -n 4 | head -n 1 | awk '{print $4}') ;
        COVERAGE="${COVERAGE:-unknown}" ;
        echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV ;
        if [ "$COVERAGE" != "unknown" ]; then
          echo "BADGECOLOR=\"brightgreen\"" >> $GITHUB_ENV ;
        else
          echo "BADGECOLOR=\"orange\"" >> $GITHUB_ENV ;
        fi ;
    - name: Create test coverage badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 40d8bf48dcbaf33c99e8de35ad6161f2
        filename: hsr4hci.json
        label: Test Coverage
        message: ${{ env.COVERAGE }}
        color: ${{ env.BADGECOLOR }}